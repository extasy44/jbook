[{"/Users/heejunseo/Desktop/React-e/react-type/jbook/src/index.tsx":"1","/Users/heejunseo/Desktop/React-e/react-type/jbook/src/plugins/unpkg-path-plugin.ts":"2","/Users/heejunseo/Desktop/React-e/react-type/jbook/src/plugins/fetch-plugin.ts":"3","/Users/heejunseo/Desktop/React-e/react-type/jbook/src/components/code-editor.tsx":"4"},{"size":2191,"mtime":1611491362663,"results":"5","hashOfConfig":"6"},{"size":830,"mtime":1611234606601,"results":"7","hashOfConfig":"6"},{"size":1797,"mtime":1611235916042,"results":"8","hashOfConfig":"6"},{"size":1544,"mtime":1611492285505,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"bnj4nj",{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"16","messages":"17","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18"},"/Users/heejunseo/Desktop/React-e/react-type/jbook/src/index.tsx",["19","20"],"/Users/heejunseo/Desktop/React-e/react-type/jbook/src/plugins/unpkg-path-plugin.ts",[],"/Users/heejunseo/Desktop/React-e/react-type/jbook/src/plugins/fetch-plugin.ts",[],"/Users/heejunseo/Desktop/React-e/react-type/jbook/src/components/code-editor.tsx",["21"],"import { useRef } from 'react';\nimport MonacoEditor, { EditorDidMount } from '@monaco-editor/react';\nimport prettier from 'prettier';\nimport parser from 'prettier/parser-babel';\n\ninterface CodeEditorProps {\n  initialValue: string;\n  onChange(value: string): void;\n}\n\nconst CodeEditor: React.FC<CodeEditorProps> = ({ onChange, initialValue }) => {\n  const editorRef = useRef<any>();\n\n  const onEditorDidMount: EditorDidMount = (getValue, monacoEditor) => {\n    editorRef.current = monacoEditor;\n    monacoEditor.onDidChangeModelContent(() => {\n      onChange(getValue());\n    });\n\n    monacoEditor.getModel()?.updateOptions({ tabSize: 2 });\n  };\n\n  const onFormatClick = () => {\n    const unformatted = editorRef.current.getModel().getValue();\n\n    const formatted = prettier.format(unformatted, {\n      parser: 'babel',\n      plugins: [parser],\n      useTabs: false,\n      semi: true,\n      singleQuote: true,\n    });\n\n    editorRef.current.setValue(formatted);\n  };\n\n  return (\n    <div>\n      <button onClick={onFormatClick}>Format</button>\n      <MonacoEditor\n        editorDidMount={onEditorDidMount}\n        value={initialValue}\n        theme=\"dark\"\n        language=\"javascript\"\n        height=\"500px\"\n        options={{\n          wordWrap: 'on',\n          minimap: { enabled: false },\n          showUnused: false,\n          folding: false,\n          lineNumbersMinChars: 3,\n          fontSize: 16,\n          scrollBeyondLastLine: false,\n          automaticLayout: true,\n        }}\n      />\n    </div>\n  );\n};\n\nexport default CodeEditor;\n",{"ruleId":"22","severity":1,"message":"23","line":12,"column":16,"nodeType":"24","messageId":"25","endLine":12,"endColumn":23},{"ruleId":"26","severity":1,"message":"27","line":78,"column":7,"nodeType":"28","endLine":78,"endColumn":68},{"ruleId":"22","severity":1,"message":"29","line":26,"column":11,"nodeType":"24","messageId":"25","endLine":26,"endColumn":20},"@typescript-eslint/no-unused-vars","'setCode' is assigned a value but never used.","Identifier","unusedVar","jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","JSXOpeningElement","'formatted' is assigned a value but never used."]